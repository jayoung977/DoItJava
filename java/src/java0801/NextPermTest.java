package java0801;

import java.util.Arrays;

//nPn
//n! =10~12!
//중간 과정도 세줄 수 있음
public class NextPermTest {
	static int[] p= {1,2,3,4,5};
	static int N=p.length;   //n이 3개일때는 그냥 다중 for문이 나음
	static int count;
	public static void main(String[] args) {
		count=0;
		do {
			count++;
			System.out.println(Arrays.toString(p));
		} while (np(N-1));
		System.out.println(count);
	}
	static boolean np(int size) {
		//1.피크를 찾는다.
		int i=size; 
		while(i>0 && p[i-1]>p[i]) i--; //증가하는 중이면 왼쪽으로 인덱스 이동
		if(i==0) return false; //54321 끝 -> 더 할 게 없음
		//2.swap
		int j=size;
		while(p[i-1]>p[j]) j--; // 피크 전보다 더 큰 j 찾음
		int temp=p[i-1];
		p[i-1]=p[j];
		p[j]=temp;
		//3.정렬
		int k=size;
		while(i<k) {
			temp=p[i];
			p[i]=p[k];
			p[k]=temp;
			i++;
			k--;
		}
		return true;
	}

}

//[1, 2, 3, 4, 5]
//[1, 2, 3, 5, 4]
//[1, 2, 4, 3, 5]
//[1, 2, 4, 5, 3]
//[1, 2, 5, 3, 4]
//[1, 2, 5, 4, 3]
//[1, 3, 2, 4, 5]
//[1, 3, 2, 5, 4]
//[1, 3, 4, 2, 5]
//[1, 3, 4, 5, 2]
//[1, 3, 5, 2, 4]
//[1, 3, 5, 4, 2]
//[1, 4, 2, 3, 5]
//[1, 4, 2, 5, 3]
//[1, 4, 3, 2, 5]
//[1, 4, 3, 5, 2]
//[1, 4, 5, 2, 3]
//[1, 4, 5, 3, 2]
//[1, 5, 2, 3, 4]
//[1, 5, 2, 4, 3]
//[1, 5, 3, 2, 4]
//[1, 5, 3, 4, 2]
//[1, 5, 4, 2, 3]
//[1, 5, 4, 3, 2]
//[2, 1, 3, 4, 5]
//[2, 1, 3, 5, 4]
//[2, 1, 4, 3, 5]
//[2, 1, 4, 5, 3]
//[2, 1, 5, 3, 4]
//[2, 1, 5, 4, 3]
//[2, 3, 1, 4, 5]
//[2, 3, 1, 5, 4]
//[2, 3, 4, 1, 5]
//[2, 3, 4, 5, 1]
//[2, 3, 5, 1, 4]
//[2, 3, 5, 4, 1]
//[2, 4, 1, 3, 5]
//[2, 4, 1, 5, 3]
//[2, 4, 3, 1, 5]
//[2, 4, 3, 5, 1]
//[2, 4, 5, 1, 3]
//[2, 4, 5, 3, 1]
//[2, 5, 1, 3, 4]
//[2, 5, 1, 4, 3]
//[2, 5, 3, 1, 4]
//[2, 5, 3, 4, 1]
//[2, 5, 4, 1, 3]
//[2, 5, 4, 3, 1]
//[3, 1, 2, 4, 5]
//[3, 1, 2, 5, 4]
//[3, 1, 4, 2, 5]
//[3, 1, 4, 5, 2]
//[3, 1, 5, 2, 4]
//[3, 1, 5, 4, 2]
//[3, 2, 1, 4, 5]
//[3, 2, 1, 5, 4]
//[3, 2, 4, 1, 5]
//[3, 2, 4, 5, 1]
//[3, 2, 5, 1, 4]
//[3, 2, 5, 4, 1]
//[3, 4, 1, 2, 5]
//[3, 4, 1, 5, 2]
//[3, 4, 2, 1, 5]
//[3, 4, 2, 5, 1]
//[3, 4, 5, 1, 2]
//[3, 4, 5, 2, 1]
//[3, 5, 1, 2, 4]
//[3, 5, 1, 4, 2]
//[3, 5, 2, 1, 4]
//[3, 5, 2, 4, 1]
//[3, 5, 4, 1, 2]
//[3, 5, 4, 2, 1]
//[4, 1, 2, 3, 5]
//[4, 1, 2, 5, 3]
//[4, 1, 3, 2, 5]
//[4, 1, 3, 5, 2]
//[4, 1, 5, 2, 3]
//[4, 1, 5, 3, 2]
//[4, 2, 1, 3, 5]
//[4, 2, 1, 5, 3]
//[4, 2, 3, 1, 5]
//[4, 2, 3, 5, 1]
//[4, 2, 5, 1, 3]
//[4, 2, 5, 3, 1]
//[4, 3, 1, 2, 5]
//[4, 3, 1, 5, 2]
//[4, 3, 2, 1, 5]
//[4, 3, 2, 5, 1]
//[4, 3, 5, 1, 2]
//[4, 3, 5, 2, 1]
//[4, 5, 1, 2, 3]
//[4, 5, 1, 3, 2]
//[4, 5, 2, 1, 3]
//[4, 5, 2, 3, 1]
//[4, 5, 3, 1, 2]
//[4, 5, 3, 2, 1]
//[5, 1, 2, 3, 4]
//[5, 1, 2, 4, 3]
//[5, 1, 3, 2, 4]
//[5, 1, 3, 4, 2]
//[5, 1, 4, 2, 3]
//[5, 1, 4, 3, 2]
//[5, 2, 1, 3, 4]
//[5, 2, 1, 4, 3]
//[5, 2, 3, 1, 4]
//[5, 2, 3, 4, 1]
//[5, 2, 4, 1, 3]
//[5, 2, 4, 3, 1]
//[5, 3, 1, 2, 4]
//[5, 3, 1, 4, 2]
//[5, 3, 2, 1, 4]
//[5, 3, 2, 4, 1]
//[5, 3, 4, 1, 2]
//[5, 3, 4, 2, 1]
//[5, 4, 1, 2, 3]
//[5, 4, 1, 3, 2]
//[5, 4, 2, 1, 3]
//[5, 4, 2, 3, 1]
//[5, 4, 3, 1, 2]
//[5, 4, 3, 2, 1]
//120
